<?php

namespace App\Models;

use App\Http\Traits\Searchable;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;
use Illuminate\Support\Facades\Cache;
use Spatie\Permission\Traits\HasRoles;

class User extends Authenticatable
{
    use HasFactory, Notifiable,HasRoles,Searchable;

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'id',
        'name',
        'email',
        'phone',
        'theme',
    ];

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [
        'password',
        'remember_token',
    ];

    /**
     * The attributes that should be cast to native types.
     *
     * @var array
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::created(fn() => self::forgetList());
        static::updated(fn() => self::forgetList());
        static::deleted(fn() => self::forgetList());
    }

    public function isOnline()
    {
        return Cache::has('user-is-online-' . $this->id);
    }

    public function switchTheme()
    {
        $this->theme = $this->theme == 'light' ? 'dark':'light';
        $this->save();
        return $this->theme;
    }

    public static function forgetList():void
    {
        Cache::forget('users-list');
    }

    public static function list()
    {
        return Cache::remember('users-list',86400,function (){
            return self::all();
        });
    }
}
